/*CURSORES*/
/*crusores implicitos y explicitos diferencias
*estructura de un cursor explicito
*hacer un cursor y recorrer mediante un for con parametros
*estructura de un bloque
*jerarquia de la exception
*exepciones predefinidas (plantilla 2)
*excepciones definidas por el usuario (sqlerrm, sqlcode)
*bulk collect
*paquete con registro bulk collect

*/
DECLARE
  /*DECLARACION DE VARIABLES, CURSORES EXPLICITOS*/
  LN_PROMEDIO NUMBER(5,2);
  LV_ERROR VARCHAR2(20);
  LV_NOMBRE VARCHAR(20);
  LV_APELLIDO VARCHAR(20);
BEGIN
  /*CUERPO DEL PROGRAMA*/
  --SELECT AVG (E.NOTA) INTO LN_PROMEDIO
  --FROM ESTUDIANTE E;
  select E.NOMBRE, E.APELLIDO INTO LV_NOMBRE, LV_APELLIDO
  FROM ESTUDIANTE E
  --WHERE E.NOMBRE LIKE 'LAURA';
  WHERE E.NOTA = 8;
  DBMS_OUTPUT.put_line('EL PROMEDIO DE LOS ESTUDIANTES ES: ' ||LV_NOMBRE||' '||LV_APELLIDO);
--EXCEPTION
  /*MANEJO DE EXEPCIONES*/
END;
---------------------------------------------------------EJERCICIOS------------------------------------------------------------------
--NOMBRE APELLIDO, SALARIO, DEPARTAMENTO, CARGO, Q OCUPA EN EL DEPARTAMENTO 60 70 80 90
--SELECT*FROM DEPARTMENTS;
  SELECT E.FIRST_NAME,
         E.LAST_NAME,
         E.SALARY,
         D.DEPARTMENT_NAME,
         D.DEPARTMENT_ID,
         J.JOB_TITLE     
  FROM EMPLOYEES E,
       DEPARTMENTS D,
       JOBS J
  WHERE D.DEPARTMENT_ID=E.DEPARTMENT_ID
  AND   E.JOB_ID=J.JOB_ID
--AND   D.DEPARTMENT_ID > 50   AND   D.DEPARTMENT_ID <= 90;
--AND D.DEPARTMENT_ID IN (60,70,80,90 );
AND D.DEPARTMENT_ID BETWEEN 60 AND 90;
-------------------------------------------------------------------------------------------------------------------------------------
/*NOMBRE APELLIDO DEPARTAMENTO_NAME CARGO DE LOS EMPLEADOS Q EMPEZARON EN OCTUBRE DEL 2012 HASTA EL MES DE OCTUBRE DEL 2013*/
  SELECT E.FIRST_NAME,
         E.LAST_NAME,
         D.DEPARTMENT_NAME,
         D.DEPARTMENT_ID,
         J.JOB_TITLE ,
         JH.START_DATE,
         JH.END_DATE    
  FROM EMPLOYEES E,
       DEPARTMENTS D,
       JOBS J,
       JOB_HISTORY JH
  WHERE JH.JOB_ID=J.JOB_ID
  AND   JH.EMPLOYEE_ID= E.EMPLOYEE_ID
  AND   JH.DEPARTMENT_ID=D.DEPARTMENT_ID
AND JH.START_DATE BETWEEN TO_DATE ('01/10/2012', 'DD/MM/YYYY') AND TO_DATE ('01/10/2013', 'DD/MM/YYYY');
--AND JH.START_DATE >= TO_DATE ('01/10/2012', 'DD/MM/YYYY') 
--AND JH.START_DATE <= TO_DATE ('01/10/2013', 'DD/MM/YYYY');
-------------------------------------------------------------------------------------------------------------------------------------
/*SELECCIONAR DEPARTAMENTOS EN LOCATIOS, COUTRIES, REGIONS, DEPARTAMENTS*/
CURSOR
  SELECT E.FIRST_NAME,
         E.LAST_NAME,
         E.SALARY,
         D.DEPARTMENT_NAME,
         C.COUNTRY_NAME,
         R.REGION_NAME,
         L.STREET_ADDRESS
  FROM EMPLOYEES E,
       DEPARTMENTS D,
       LOCATIONS L,
       COUNTRIES C,
       REGIONS R
  WHERE D.DEPARTMENT_ID=E.DEPARTMENT_ID
  AND   D.LOCATION_ID=L.LOCATION_ID
  AND   L.COUNTRY_ID=C.COUNTRY_ID
  AND   R.REGION_ID=C.REGION_ID
  AND   UPPER (R.REGION_NAME)='AMERICAS';
---------------------------------------------------------CURSORES EXPLICITOS-------------------------------------------------------
/*CURSORES POR PARAMETROS*/
DECLARE
  CURSOR C_EMPLEADO (LV_START_DATE DATE, LV_START_DATE1 DATE)  IS
  SELECT E.FIRST_NAME,
         E.LAST_NAME,
         D.DEPARTMENT_NAME,
         D.DEPARTMENT_ID,
         J.JOB_TITLE ,
         JH.START_DATE,
         JH.END_DATE    
  FROM EMPLOYEES E,
       DEPARTMENTS D,
       JOBS J,
       JOB_HISTORY JH
  WHERE JH.JOB_ID=J.JOB_ID
  AND   JH.EMPLOYEE_ID= E.EMPLOYEE_ID
  AND   JH.DEPARTMENT_ID=D.DEPARTMENT_ID
  AND JH.START_DATE >= LV_START_DATE 
  AND JH.START_DATE <=LV_START_DATE1;

LC_EMPLEADO  C_EMPLEADO%ROWTYPE;
BEGIN
   OPEN C_EMPLEADO(TO_DATE ('01/10/2012', 'DD/MM/YYYY'),TO_DATE ('01/10/2013', 'DD/MM/YYYY')) ;
     LOOP
       FETCH C_EMPLEADO INTO LC_EMPLEADO;
       EXIT WHEN C_EMPLEADO%NOTFOUND;
       DBMS_OUTPUT.put_line(LC_EMPLEADO.FIRST_NAME||' '||LC_EMPLEADO.LAST_NAME||' '||LC_EMPLEADO.DEPARTMENT_NAME||' '||LC_EMPLEADO.JOB_TITLE);
     END LOOP;
   CLOSE C_EMPLEADO;
--EXEPTION
END;
-------------------EJEMPLO CON FOR LOOP------------------------------------------------------------------------------------
DECLARE
  CURSOR C_EMPLEADO (LV_START_DATE DATE, LV_START_DATE1 DATE)  IS
  SELECT E.FIRST_NAME,
         E.LAST_NAME,
         D.DEPARTMENT_NAME,
         D.DEPARTMENT_ID,
         J.JOB_TITLE ,
         JH.START_DATE,
         JH.END_DATE    
  FROM EMPLOYEES E,
       DEPARTMENTS D,
       JOBS J,
       JOB_HISTORY JH
  WHERE JH.JOB_ID=J.JOB_ID
  AND   JH.EMPLOYEE_ID= E.EMPLOYEE_ID
  AND   JH.DEPARTMENT_ID=D.DEPARTMENT_ID
  AND JH.START_DATE >= LV_START_DATE 
  AND JH.START_DATE <=LV_START_DATE1;

LC_EMPLEADO  C_EMPLEADO%ROWTYPE;
BEGIN
   FOR H IN C_EMPLEADO (TO_DATE ('01/10/2012', 'DD/MM/YYYY'),TO_DATE ('01/10/2013', 'DD/MM/YYYY'))  LOOP
    DBMS_OUTPUT.put_line(H.FIRST_NAME||' '||H.LAST_NAME||' '||H.DEPARTMENT_NAME||' '||H.JOB_TITLE);
   END LOOP;
--EXEPTION
END;
---------------------------------------------------------------------------------------------------------------------------------
/*SIN PARAMETROS*/
DECLARE
  CURSOR E_DEPARTAMENTO   IS
   SELECT E.FIRST_NAME,
         E.LAST_NAME,
         E.SALARY,
         D.DEPARTMENT_NAME,
         D.DEPARTMENT_ID,
         J.JOB_TITLE     
  FROM EMPLOYEES E,
       DEPARTMENTS D,
       JOBS J
  WHERE D.DEPARTMENT_ID=E.DEPARTMENT_ID
  AND   E.JOB_ID=J.JOB_ID
--AND   D.DEPARTMENT_ID > 50   AND   D.DEPARTMENT_ID <= 90;
AND D.DEPARTMENT_ID IN (60,70,80,90 );
--AND D.DEPARTMENT_ID BETWEEN 60 AND 90;

LC_DEPARTAMENTO  E_DEPARTAMENTO%ROWTYPE;
BEGIN
   OPEN E_DEPARTAMENTO ;
     LOOP
       FETCH E_DEPARTAMENTO INTO LC_DEPARTAMENTO;
       EXIT WHEN E_DEPARTAMENTO%NOTFOUND;
       DBMS_OUTPUT.put_line(LC_DEPARTAMENTO.FIRST_NAME||' '||LC_DEPARTAMENTO.LAST_NAME||' '||LC_DEPARTAMENTO.DEPARTMENT_NAME||' '||LC_DEPARTAMENTO.DEPARTMENT_ID);
     END LOOP;
   CLOSE E_DEPARTAMENTO;
--EXEPTION
END;
----------------------------------------------------------------------------------------------------------------------------------
/*CON PARAMETROS */
DECLARE
  CURSOR E_DEPARTAMENTO(DEP1 NUMBER, DEP2 NUMBER, DEP3 NUMBER, DEP4 NUMBER)   IS
   SELECT E.FIRST_NAME,
         E.LAST_NAME,
         E.SALARY,
         D.DEPARTMENT_NAME,
         D.DEPARTMENT_ID,
         J.JOB_TITLE     
  FROM EMPLOYEES E,
       DEPARTMENTS D,
       JOBS J
  WHERE D.DEPARTMENT_ID=E.DEPARTMENT_ID
  AND   E.JOB_ID=J.JOB_ID
--AND   D.DEPARTMENT_ID > 50   AND   D.DEPARTMENT_ID <= 90;
AND D.DEPARTMENT_ID IN (DEP1,DEP2,DEP3,DEP4 );
--AND D.DEPARTMENT_ID BETWEEN 60 AND 90;

LC_DEPARTAMENTO  E_DEPARTAMENTO%ROWTYPE;
BEGIN
   OPEN E_DEPARTAMENTO (60,70,80,90);
     LOOP
       FETCH E_DEPARTAMENTO INTO LC_DEPARTAMENTO;
       EXIT WHEN E_DEPARTAMENTO%NOTFOUND;
       DBMS_OUTPUT.put_line(LC_DEPARTAMENTO.FIRST_NAME||' '||LC_DEPARTAMENTO.LAST_NAME||' '||LC_DEPARTAMENTO.DEPARTMENT_NAME||' '||LC_DEPARTAMENTO.DEPARTMENT_ID);
     END LOOP;
   CLOSE E_DEPARTAMENTO;
--EXEPTION
END;
--------------------------------------------------------------------------------------------------------------------------------
/*EMPLEADOS AGRUPADOS POR DEPARTAMENTOS*/
DECLARE
  CURSOR E_DEPARTAMENTO  IS
   
   SELECT D.DEPARTMENT_NAME, 
          count (E.EMPLOYEE_ID) AS CANT_EMPLOYEE
   FROM EMPLOYEES E, 
       DEPARTMENTS D
   WHERE D.DEPARTMENT_ID=E.DEPARTMENT_ID
  GROUP BY D.DEPARTMENT_NAME;
LC_DEPARTAMENTO  E_DEPARTAMENTO%ROWTYPE;
BEGIN
   OPEN E_DEPARTAMENTO;
     LOOP
       FETCH E_DEPARTAMENTO INTO LC_DEPARTAMENTO;
       EXIT WHEN E_DEPARTAMENTO%NOTFOUND;
       DBMS_OUTPUT.put_line(LC_DEPARTAMENTO.CANT_EMPLOYEE||' '||LC_DEPARTAMENTO.DEPARTMENT_NAME);
     END LOOP;
   CLOSE E_DEPARTAMENTO;
--EXEPTION
END;
------------------------------------------------------------------------------------------------------------------------------------
/*CON FOR LOP*/
DECLARE
  CURSOR E_DEPARTAMENTO  IS
   
   SELECT D.DEPARTMENT_NAME, 
          count (E.EMPLOYEE_ID) AS CANT_EMPLOYEE
   FROM EMPLOYEES E, 
       DEPARTMENTS D
   WHERE D.DEPARTMENT_ID=E.DEPARTMENT_ID
  GROUP BY D.DEPARTMENT_NAME;
LC_DEPARTAMENTO  E_DEPARTAMENTO%ROWTYPE;
BEGIN
    DBMS_OUTPUT.put_line('CANTIDAD'||' '||'DEPARTAMENTO');
   FOR I IN E_DEPARTAMENTO  LOOP
    DBMS_OUTPUT.put_line(I.CANT_EMPLOYEE||' '||I.DEPARTMENT_NAME);
   END LOOP;
--EXEPTION
END;
------------------------------------------------------------------------------------------------------------------------------------
/*CON PARAMETROS*/
DECLARE
  CURSOR E_DEPARTAMENTO (DEPT VARCHAR2) IS
     SELECT D.DEPARTMENT_NAME, 
            count (E.EMPLOYEE_ID) AS CANT_EMPLOYEE
     FROM EMPLOYEES E, 
          DEPARTMENTS D
     WHERE D.DEPARTMENT_ID=E.DEPARTMENT_ID
     AND UPPER(D.DEPARTMENT_NAME)=UPPER(DEPT)
     GROUP BY D.DEPARTMENT_NAME;
BEGIN
    DBMS_OUTPUT.put_line('CANTIDAD'||' '||'DEPARTAMENTO');
   FOR I IN E_DEPARTAMENTO('SALES')  LOOP
    DBMS_OUTPUT.put_line(I.CANT_EMPLOYEE||'       '||I.DEPARTMENT_NAME);
   END LOOP;
--EXEPTION
END;
-------------------------------------------------------------------------------------------------------------------------------------
/*MANEJO DE EXEPCIONES..*/
DECLARE
  --CURSOR E_DEPARTAMENTO (DEPT VARCHAR2) IS
  CURSOR E_DEPARTAMENTO  IS
   SELECT D.DEPARTMENT_NAME, 
          count (E.EMPLOYEE_ID) AS CANT_EMPLOYEE
   FROM EMPLOYEES E, 
       DEPARTMENTS D
   WHERE D.DEPARTMENT_ID=E.DEPARTMENT_ID
 --  AND UPPER(D.DEPARTMENT_NAME)=UPPER(DEPT)
  GROUP BY D.DEPARTMENT_NAME;
LC_DEPARTAMENTO  E_DEPARTAMENTO%ROWTYPE;
LN_CANT NUMBER;
BEGIN
  -- OPEN E_DEPARTAMENTO('SALES');
   OPEN E_DEPARTAMENTO;
       DBMS_OUTPUT.put_line('CANTIDAD'||'  '||'DEPARTAMENTO');
     LOOP
       FETCH E_DEPARTAMENTO INTO LC_DEPARTAMENTO;
       EXIT WHEN E_DEPARTAMENTO%NOTFOUND;
       --DBMS_OUTPUT.put_line('CANTIDAD'||'  '||'DEPARTAMENTO');
       DBMS_OUTPUT.put_line(LC_DEPARTAMENTO.CANT_EMPLOYEE||'        '||LC_DEPARTAMENTO.DEPARTMENT_NAME);
       LN_CANT:=E_DEPARTAMENTO%ROWCOUNT;
     END LOOP;
   CLOSE E_DEPARTAMENTO;
   DBMS_OUTPUT.put_line('LA CANTIDAD DE REGISTROS ES: '|| LN_CANT);
--EXEPTION
END;
/*EL ROWCOUNT CUENTA LOS REGISTROS DE LA TABLA CONSULTADA */
-------------------------------------------------------------------------------------------------------------------------------------
